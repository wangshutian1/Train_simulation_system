package subsimlulationsystem;

import java.io.*;

public class Test {
	public static void main(String[] args) throws IOException {
		
	//读取subway.text文件，将文件中的内容存入二维数组array中
		  String filePath = "D:/subway.txt";
	        FileInputStream fin = new FileInputStream(filePath);
	        InputStreamReader reader = new InputStreamReader(fin);
	        BufferedReader buffReader = new BufferedReader(reader);
	        String[][] array = new String [274][2] ;
	        String str= "";
	        String[] STR= new String[2];
	        int i=0;
	        while((str=buffReader.readLine())!=null) {
	    		STR=str.split("\\s+");                    //将所读取的文本内容按Tab符分隔后存入数组STR中
	    	   for(int j=0;j<2;j++) {
	    	   array[i][j]=STR[j];                            //将数组STR中的内容赋给二维数组array
	    	   }
	    	  i++;
	       }
	        
    //给submessage赋初值，submessage的第一列为站点名称，第二列为站点所属线路
	   SubwaySystem sbs =new SubwaySystem();
	   sbs.route=array;
	   sbs.assignment(0, 30, sbs.obsubMessage(0, 30, "1号线") );
	   sbs.assignment(31, 67, sbs.obsubMessage(31, 67, "2号线"));
	   sbs.assignment(68,90 , sbs.obsubMessage(68, 90, "3号线"));
	   sbs.assignment(91,117 , sbs.obsubMessage(91, 117, "4号线"));
	   sbs.assignment(118,143 , sbs.obsubMessage(118, 143, "5号线"));
	   sbs.assignment(144,169 , sbs.obsubMessage(144, 169, "6号线"));
	   sbs.assignment(170,201 , sbs.obsubMessage(170, 201, "7号线"));
	   sbs.assignment(202,226 , sbs.obsubMessage(202, 226, "8号线"));
	   sbs.assignment(227,240 , sbs.obsubMessage(227, 240, "阳逻线"));
	   sbs.assignment(241,253 , sbs.obsubMessage(241, 253, "11号线"));
	   sbs.assignment(254,266 , sbs.obsubMessage(254, 266, "16号线"));
	   sbs.assignment(267,273 , sbs.obsubMessage(267, 273, "19号线"));
	  for(int j=0;j<sbs.submessage.length;j++) {
		   System.out.println(sbs.submessage[j][0]+","+sbs.submessage[j][1]);
	   }
	   
   //任务一：输出所有中转站
	   for(int m=0;m<274;m++) {
		   for(int n=0;n<274;n++)
		   if(sbs.submessage[m][0].equals(sbs.submessage[n][0])&&m!=n) {
		   @SuppressWarnings("unused")
		   ArrayList<String> STREM= new ArrayList<String>();
		   for(int k=0;k<274;k++) {
		   if(sbs.submessage[k][0].equals(sbs.submessage[m][0])){
      		     STREM.add(sbs.submessage[k][1]);
			
				   }
		   }
		   System.out.print("<<"+sbs.submessage[m][0]);
			for(int q=0;q<STREM.size();q++) {
			System.out.print(",");   
			System.out.print(STREM.get(q));
		   }
			System.out.println(">>");	
	       }
	 }


   //任务二：输入某一站点，输出线路距离小于 n 的所有站点集合   
	     String Str="江汉路";
	       int n=2;
	       System.out.print(Str+"站，距离为"+n+"的站点为<");
	   	for(int j=0;j<274;j++) {
	   	   if(sbs.submessage[j][0].equals(Str)) {
	   		for(int k=0;k<274;k++) {
	   		  double distance= 0;
	        	if(sbs.submessage[k][1].equals(sbs.submessage[j][1])) {
 			if(k<j) {
			  for(int y=1;;y++) {
			   distance=distance+Double.parseDouble(array[j-y][1]);
			    if(j-y==k)break;
	   				}
			    if(distance<n) System.out.print("<"+sbs.submessage[k][0]+"站,"+
			    		sbs.submessage[k][1]+","+n+">,");
	   				}
	   		    if(k>j) {
			 	for(int y=0;;y++) {
   				 distance=distance+Double.parseDouble(array[j+y][1]);
   				 if(j+y+1==k)break;
   						}
   				    if(distance<n) System.out.print("<"+sbs.submessage[k][0]+"站,"+
   			    		sbs.submessage[k][1]+","+n+">>");	
	   				       }
	   				}
	   			 }
	   		 }
	   		   
	         }    
	        
	        
   //任务三：输入起点站和终点站的名称，返回一个包含连接起点和终点的所有路径的集合     
	     Graph G= new Graph();
	         for(int j=0;j<274;) {
	    	 for(int k=j;k<273;k++) {
	    		 if(sbs.submessage[k][1].equals(sbs.submessage[j][1])&& 
	    			sbs.submessage[k+1][1].equals(sbs.submessage[j][1]))
	    		 {  
	    			 Double edge=Double.parseDouble(sbs.route[k][1]);
	    			G.addEdge(sbs.submessage[k][0], sbs.submessage[k+1][0],edge);
	    			
	    		 }
	    		 if(!sbs.submessage[k][1].equals(sbs.submessage[j][1])) {
	    			j=k;
	    		    break;
	    		 }
	    		 if(k+1==273){
	    		 Double edge=Double.parseDouble(sbs.route[k][1]);
		    	 G.addEdge(sbs.submessage[k][0], sbs.submessage[k+1][0],edge);
				   j=k+2;
				   break;
				}
	    	 }	     
	     }	    
	     

	        String start = "华中科技大学";
	        String end = "江汉路";

	        List<List<String>> allPaths = G.findAllPaths(start, end);
	        System.out.println("所有路径:");
	        Set<List<String>> uniqueLists =new HashSet<List<String>>(allPaths);
	        for(List<String> string:uniqueLists) {
	        	System.out.println(string);	
	        }


      //任务四：给定起点站和终点站的名称，返回一条最短路径
	        List<String> shortestPath = G.findShortestPath(start, end);
	        System.out.println("最短路径: " + shortestPath);        

 
     //任务五：将最短乘车路径以简洁的形式打印至标准输出，仅包含每一段乘车路径的起始
	    ArrayList<String> arraylist = new ArrayList<String>();
	    for(int k=0;k<shortestPath.size();k++) {
	    for(int y=0;y<274;y++) {
		     if((shortestPath.get(k)).equals(sbs.submessage[y][0])) {
		    	arraylist.add(sbs.submessage[y][1]);
		    	break;
		        }	    
	         }
         }	  
	    int x=0;
	    for(int y=0;y<shortestPath.size();y++) {
	     if(!(arraylist.get(y)).equals(arraylist.get(0))) {
	     System.out.print("从"+start+"到"+end+"的最短路径：先乘坐"+
	  	          arraylist.get(0)+"从"+shortestPath.get(0)+
	  	          "到"+shortestPath.get(y));
	     System.out.print(",在"+shortestPath.get(y)+"换乘"+arraylist.get(y));
	     x=y;
	     break;
	           }
	      }
	     for(int j=x;j<shortestPath.size();j++) {
	    	 if(j!=shortestPath.size()-1) {
	    	 if(!(arraylist.get(j+1)).equals(arraylist.get(j))) {
	    		 System.out.print("到"+shortestPath.get(j+1));
	    		 System.out.print(",在"+shortestPath.get(j+1)+"换乘"+arraylist.get(j+1));
	    		 continue;
	              }
	    	  }
	    	 if(j==shortestPath.size()-1) {
	    		 System.out.print("到"+shortestPath.get(j)+"。"); 
	    	 }
	 }  


       //任务六:用户从路径集合中选择一条路径，计算该路径对应的乘车费用（普通单程票）
	       double mile=0;
	       int p=2;
	       List<String> path=allPaths.get(p) ;
	       ArrayList<String> Arylist = new ArrayList<String>();
		    for(int k=0;k<path.size();k++) {
		    for(int y=0;y<274;y++) {
			     if(path.get(k).equals(sbs.submessage[y][0])) {
			    	Arylist.add(sbs.submessage[y][1]);
			    	break;
			     }	    
		     }
	     }
		  
	      for(int j=0;j<Arylist.size();j++) {
	    	  if(j!=path.size()-1) {
	    	  if(Arylist.get(j+1).equals(Arylist.get(j)))
	    		  mile+=Double.parseDouble(array[j][1]);
	    	  if(!Arylist.get(j+1).equals(Arylist.get(j))) {
	    		  mile+=Double.parseDouble(array[j+1][1]);
	    	      j+=1;
	    	      continue;}
	    	  }
	      }
	      	    
	     System.out.println("第"+(p+1)+"条路线："+allPaths.get(p));
	     System.out.print("从"+start+"到"+end+",选择第"+(p+1)+"条路线,普通单程票的乘车费用为"
	     +TicketPrice.calculateFare(mile)+"元");
	        
	    
        //任务七:对于同样的路径，计算使用武汉通和日票的乘客的票价
	     System.out.print(",武汉通刷卡的乘车费用为"
	    	     +TicketPrice.calculateFare(mile)*0.9+"元"+
	    		 ",日票的乘车费用为0元。");  
	               
	     
	        buffReader.close();
	}

}


